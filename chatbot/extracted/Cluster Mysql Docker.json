{
  "filename": "Cluster Mysql Docker.pdf",
  "content": "Documentation : Installation et \nConfiguration d'un Cluster \nMySQL avec Docker\nEcrit par Mohamed Trabelsi\n1Ô∏è‚É£ Introduction\nCette documentation d√©crit l'installation et la configuration d'un cluster MySQL \navec un n≈ìud primaire et deux r√©plicas, ainsi que l'int√©gration avec Joget via \nMySQL Router. L'architecture comprend :\nVM1 : MySQL primaire\nVM2 : R√©plica 1\nVM3 : MySQL Router\nVM4 : R√©plica 2\n2Ô∏è‚É£ Configuration des VMs\nAjoutez ces entr√©es dans /etc/hosts  sur chaque VM :\n192.168.75.111 mysql-replica1\n192.168.75.152 mysql-primary\n192.168.75.199 mysql-router\n192.168.75.203 mysql-replica2\n3Ô∏è‚É£ D√©ploiement des Conteneurs MySQL avec Docker \nCompose\nüìå Docker Compose pour MySQL Primaire (VM1)\nCr√©ez un fichier docker-compose.yml  :\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n1\n\nversion: '3.8'\n#ubuntu 3\nservices:\n  # MySQL Primary Node\n  mysql-primary:\n    image: mysql/mysql-server:8.0\n    container_name: mysql-primary\n    hostname: mysql-primary\n    network_mode: \"host\"\n    environment:\n      MYSQL_ROOT_PASSWORD: fb\n      MYSQL_DATABASE: jwdb\n      MYSQL_USER: fb\n      MYSQL_PASSWORD: fb\n    volumes:\n      - mysql-primary-data:/var/lib/mysql\n    ports:\n      - \"3306:3306\"\n      - \"33061:33061\"\n    command: >\n      --server-id=1\n      --log-bin=mysql-bin\n      --gtid-mode=ON\n      --enforce-gtid-consistency=ON\n      --binlog-format=ROW\n      --log-slave-updates=ON\n      --transaction-write-set-extraction=XXHASH64\n      --innodb-flush-log-at-trx-commit=1\n      --innodb-flush-method=O_DIRECT\n      --innodb-file-per-table=1\n      --innodb-buffer-pool-size=1G\n      --innodb-log-file-size=500M\n      --innodb-log-buffer-size=64M\n      --innodb-flush-log-at-timeout=1\n      --innodb-monitor-enable=all\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n2\n\n      --innodb-print-all-deadlocks=1\n      --innodb-status-file=1\n      --innodb-buffer-pool-dump-at-shutdown=1\n      --innodb-buffer-pool-load-at-startup=1\n      --innodb-buffer-pool-filename=ib_buffer_pool\n      --innodb-buffer-pool-dump-pct=25\n      --innodb-buffer-pool-chunk-size=128M\n      --innodb-buffer-pool-instances=8\n      --innodb-log-files-in-group=2\n      --innodb-log-file-size=500M\n      --innodb-log-buffer-size=64M\n      --innodb-flush-log-at-timeout=1\n      --innodb-monitor-enable=all\n      --innodb-print-all-deadlocks=1\n      --innodb-status-file=1\n      --innodb-buffer-pool-dump-at-shutdown=1\n      --innodb-buffer-pool-load-at-startup=1\n      --innodb-buffer-pool-filename=ib_buffer_pool\n      --innodb-buffer-pool-dump-pct=25\n      --innodb-buffer-pool-chunk-size=128M\n      --innodb-buffer-pool-instances=8\n      --innodb-log-files-in-group=2\n# Docker Volumes\nvolumes:\n  mysql-primary-data:\nüìå Docker Compose pour R√©plica 1 (VM2)\nversion: '3.8'\nservices:\n  mysql-replica1:\n    image: mysql/mysql-server:8.0\n    container_name: mysql-replica1\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n3\n\n    hostname: mysql-replica1\n    network_mode: \"host\"\n    environment:\n      MYSQL_ROOT_PASSWORD: fb\n      MYSQL_DATABASE: jwdb\n      MYSQL_USER: fb\n      MYSQL_PASSWORD: fb\n    volumes:\n      - mysql-replica1-data:/var/lib/mysql\n    ports:                                             \n      - \"3306:3306\"\n      - \"33061:33061\"\n    command: >\n      --server-id=2\n      --log-bin=mysql-bin\n      --gtid-mode=ON\n      --enforce-gtid-consistency=ON\n      --binlog-format=ROW\n      --log-slave-updates=ON\n      --transaction-write-set-extraction=XXHASH64\n      --innodb-flush-log-at-trx-commit=1\n      --innodb-flush-method=O_DIRECT\n      --innodb-file-per-table=1\n      --innodb-buffer-pool-size=1G\n      --innodb-log-file-size=500M\n      --innodb-log-buffer-size=64M\n      --innodb-flush-log-at-timeout=1\n      --innodb-monitor-enable=all\n      --innodb-print-all-deadlocks=1\n      --innodb-status-file=1\n      --innodb-buffer-pool-dump-at-shutdown=1\n      --innodb-buffer-pool-load-at-startup=1\n      --innodb-buffer-pool-filename=ib_buffer_pool\n      --innodb-buffer-pool-dump-pct=25\n      --innodb-buffer-pool-chunk-size=128M\n      --innodb-buffer-pool-instances=8\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n4\n\n      --innodb-log-files-in-group=2\n# Docker Volumes\nvolumes:\n  mysql-replica1-data:\nüìå Docker Compose pour R√©plica 2 (VM3 - Container Docker)\nversion: '3.8'\nservices:\n  mysql-replica2:\n    image: mysql/mysql-server:8.0\n    container_name: mysql-replica2\n    hostname: mysql-replica2\n    network_mode: \"host\"\n    environment:\n      MYSQL_ROOT_PASSWORD: fb\n      MYSQL_DATABASE: jwdb\n      MYSQL_USER: fb\n      MYSQL_PASSWORD: fb\n    volumes:\n      - mysql-replica2-data:/var/lib/mysql\n    ports:\n      - \"3306:3306\"\n      - \"33061:33061\"\n    command: >\n      --server-id=3\n      --log-bin=mysql-bin\n      --gtid-mode=ON\n      --enforce-gtid-consistency=ON\n      --binlog-format=ROW\n      --log-slave-updates=ON\n      --transaction-write-set-extraction=XXHASH64\n      --innodb-flush-log-at-trx-commit=1\n      --innodb-flush-method=O_DIRECT\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n5\n\n      --innodb-file-per-table=1\n      --innodb-buffer-pool-size=1G\n      --innodb-log-file-size=500M\n      --innodb-log-buffer-size=64M\n      --innodb-flush-log-at-timeout=1\n      --innodb-monitor-enable=all\n      --innodb-print-all-deadlocks=1\n      --innodb-status-file=1\n      --innodb-buffer-pool-dump-at-shutdown=1\n      --innodb-buffer-pool-load-at-startup=1\n      --innodb-buffer-pool-filename=ib_buffer_pool\n      --innodb-buffer-pool-dump-pct=25\n      --innodb-buffer-pool-chunk-size=128M\n      --innodb-buffer-pool-instances=8\n      --innodb-log-files-in-group=2\n# Docker Volumes\nvolumes:\n  mysql-replica2-data:\nüìå Docker Compose pour MySQL Router (VM3)\nversion: '3'\nservices:\n  mysql-router:\n    image: mysql/mysql-router\n    container_name: mysql-router\n    network_mode: host\n    environment:\n      MYSQL_HOST: mysql-primary\n      MYSQL_PORT: \"3306\"\n      MYSQL_USER: admin\n      MYSQL_PASSWORD: admin\n      MYSQL_INNODB_CLUSTER_MEMBERS: \"3\"\n    restart: always\n4Ô∏è‚É£\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n6\n\n4Ô∏è‚É£ D√©ploiement et Configuration\n1Ô∏è‚É£ D√©marrer les services\nEx√©cutez la commande suivante sur chaque VM :\ndocker-compose up -d\n2Ô∏è‚É£ Cr√©er l‚Äôutilisateur admin dans chaque conteneur\n```bash\ndocker exec -it mysql-primary mysql -uroot -pfb -e \"CREATE USER 'admi\n```\nn'@'%' IDENTIFIED BY 'admin'; GRANT ALL PRIVILEGES ON *.* TO 'admi\nn'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES; RESET MASTER;\"\nFaites de m√™me pour mysql-replica1  et mysql-replica2 .\n3Ô∏è‚É£ Configurer les instances pour le cluster\nDans chaque conteneur, ex√©cutez :\n```bash\ndocker exec -it mysql-primary mysqlsh -uroot -pfb -e \"dba.configureInstance\n```\n('admin@mysql-primary:3306')\"\n```bash\ndocker exec -it mysql-replica1 mysqlsh -uroot -pfb -e \"dba.configureInstance\n```\n('admin@mysql-replica1:3306')\"\n```bash\ndocker exec -it mysql-replica2 mysqlsh -uroot -pfb -e \"dba.configureInstance\n```\n('admin@mysql-replica2:3306')\"\n4Ô∏è‚É£ Cr√©er le cluster depuis MySQL Primary\n```bash\ndocker exec -it mysql-primary mysqlsh -uroot -pfb\n```\nPuis, dans MySQL Shell :\nvar cls = dba.createCluster(\"myCluster\");\ncls.addInstance(\"admin@mysql-replica1:3306\");\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n7\n\ncls.addInstance(\"admin@mysql-replica2:3306\");\ncls.status();\n5Ô∏è‚É£ V√©rifier le cluster\n```bash\ndocker exec -it mysql-primary mysqlsh -uroot -pfb -e \"var cls = dba.getClust\n```\ner(); cls.status();\"\n5Ô∏è‚É£ Int√©gration avec Joget\nüìå Configuration de la base de donn√©es dans Joget\nAjoutez ces param√®tres dans wflow-datasource.properties  :\nworkflowDriver=com.mysql.cj.jdbc.Driver\nworkflowUrl=jdbc:mysql://192.168.75.199:6446/jwdb?characterEncoding=UTF\n-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC\nworkflowUser=admin\nworkflowPassword=admin\nV√©rifiez que Joget peut se connecter √† MySQL Router et au cluster.\nüéØ Remarques Importantes\n1. *Les identifiants de la base de donn√©es doivent √™tre stock√©s dans un ** .env  \npour plus de s√©curit√©.\n2. L'initialisation de la base de donn√©es ( init.sql ) doit √™tre int√©gr√©e dans Docker \nCompose pour automatiser la cr√©ation des tables et utilisateurs.\n3. Joget doit se connecter au Router et non aux n≈ìuds directement, afin \nd‚Äôassurer la haute disponibilit√©.\n‚úÖ Conclusion\nCette configuration permet de d√©ployer un cluster MySQL hautement disponible \navec Joget via MySQL Router. V√©rifiez que les conteneurs fonctionnent \nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n8\n\ncorrectement avec docker ps  et que Joget peut √©tablir la connexion.\nüöÄ Cluster MySQL pr√™t √† l'emploi !\nDocumentation : Installation et Configuration d'un Cluster MySQL avec Docker\n9\n\n"
}